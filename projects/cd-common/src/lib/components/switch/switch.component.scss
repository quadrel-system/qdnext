/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

$height: 8px;
$trackWidth: 18px;
$handleSize: 12px;

:host {
  display: grid;
  align-items: center;
  grid-auto-flow: column;
  height: $handleSize;
  width: var(--cd-size-3);
  line-height: 12px;
  position: relative;

  &.has-label {
    grid-template-columns: var(--cd-size-3) auto;
    gap: var(--cd-spacing-3);
    width: unset;
  }

  &.disabled {
    opacity: 0.38;
    pointer-events: none;
  }
}

.track {
  position: relative;
  height: $height;
  background: #000;
  opacity: 0.5;
  border-radius: $height;
  width: $trackWidth;
  transform: translateX(calc(#{$handleSize} / 4));
  transition: opacity 250ms;
  transition-timing-function: var(--cd-transition-timing);
}

.thumb {
  border-radius: 50%;
  width: $handleSize;
  height: $handleSize;
  background: var(--cd-switch-fill);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  z-index: 2;
}

.handle {
  left: 0;
  position: absolute;
  transform: translate(0, 0);
  transition: transform 90ms;
  transition-timing-function: var(--cd-transition-timing);

  &::before {
    position: absolute;
    content: '';
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: #000;
    opacity: 0;
    border-radius: 50%;
    transition: opacity 150ms, color 150ms, transform 150ms;
    transition-timing-function: var(--cd-transition-timing);
    transform: scale(0);
    z-index: -1;
  }
}

:host.checked {
  .thumb {
    background: var(--cd-primary-color);
  }

  .handle {
    transform: translate(100%, 0);

    &::before {
      background: var(--cd-primary-color);
    }
  }

  .track {
    background: var(--cd-primary-color);
    opacity: 0.5;
  }
}

:host:hover .handle::before,
.handle.focused::before {
  opacity: 0.1;
  transform: scale(1);
}
